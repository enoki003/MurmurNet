# プロジェクトタスクリスト（2025年5月3日 現在）

1. distributed_slmパッケージ構造の整理
   - modules/配下の各モジュールファイル（agent_pool.py, blackboard.py, input_reception.py, output_agent.py, rag_retriever.py, summary_engine.py）を設計方針に沿って整理・命名統一する。
   - __init__.pyの作成・整理。

2. 各モジュールの実装
   - input_reception.py：テキスト正規化、トークナイズ、埋め込み計算の関数・クラス実装。
   - blackboard.py：時系列エントリの蓄積・読み書き・スナップショット機能の実装。
   - summary_engine.py：黒板内容の圧縮的要約アルゴリズム実装。
   - agent_pool.py：Gemma-3 1B/Functional Agentの抽象化、並列実行、run_allメソッドの非同期化。
   - rag_retriever.py：Cosine類似度による埋め込み検索、外部ドキュメント取得機能の実装。
   - output_agent.py：黒板全体の統合要約・最終応答生成ロジックの実装。

3. DistributedSLMクラスの統合
   - distributed_slm.pyにて、設定読み込み、各モジュールの初期化、generateメソッドの実装。
   - 設定ファイル（YAML/JSON）によるパラメータ管理機能の追加。

4. テスト・デバッグ
   - test_script.pyやblackbox_test_program.pyで各モジュールの単体・結合テスト。
   - テストログ（test_log.txt）で動作確認・バグ修正。

5. ドキュメント整備
   - README.mdの更新（設計概要、使い方、API仕様、依存ライブラリなど）。
   - 各モジュールにdocstring・コメント追加。

6. フロントエンド連携（必要に応じて）
   - Tauri/React等とのAPI連携設計・実装。

7. 今後の拡張・改善タスク
   - Agentのプラグイン追加・切替機構。
   - RAG Knowledge Baseの外部データソース拡充。
   - 設定パラメータの柔軟化・UI化。

# 各タスクは進捗に応じて細分化・更新すること。